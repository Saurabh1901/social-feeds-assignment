{"ast":null,"code":"var _jsxFileName = \"/home/saurabh/Assignment/assignment/Client/src/components/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { Button, Card, Container, Form, Stack } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [inputValues, setInputValues] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const handleOnChange = useCallback(event => {\n    console.log(\"Hejj\");\n    console.log(\"event: \", event);\n    console.log(\"event.target: \", event.target);\n    console.log(\"event.target.value: \", event.target.value);\n    const {\n      name,\n      value\n    } = event.target;\n    setInputValues({ ...inputValues,\n      [name]: value\n    });\n  }, [inputValues]);\n\n  const fetchMoreData = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-3\",\n      children: \"Assignment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlInput1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: inputValues.title,\n            type: \"text\",\n            placeholder: \"Enter Title\",\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlTextarea1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            // onChange={(e: any) => {\n            //   onChange.bind(e, \"content\");\n            // }}\n            required: true,\n            value: inputValues.content,\n            as: \"textarea\",\n            rows: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          children: \"Submit Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: 8,\n        next: fetchMoreData,\n        hasMore: true,\n        loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          gap: 4,\n          className: \"col-md-4 mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: \"28rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Card Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"n2ynJoRo3TKyH9MtHn7jRZv8NBo=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/saurabh/Assignment/assignment/Client/src/components/Home.tsx"],"names":["React","useCallback","useState","Button","Card","Container","Form","Stack","InfiniteScroll","Home","inputValues","setInputValues","title","content","handleOnChange","event","console","log","target","value","name","fetchMoreData","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Container,\n  Form,\n  Placeholder,\n  Stack,\n} from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nexport default function Home() {\n  const [inputValues, setInputValues] = useState({\n    title: \"\",\n    content: \"\",\n  });\n\n  const handleOnChange = useCallback(\n    (event) => {\n      console.log(\"Hejj\");\n      console.log(\"event: \", event);\n      console.log(\"event.target: \", event.target);\n      console.log(\"event.target.value: \", event.target.value);\n\n      const { name, value } = event.target;\n      setInputValues({ ...inputValues, [name]: value });\n    },\n    [inputValues]\n  );\n\n  const fetchMoreData = () => {};\n  return (\n    <div>\n      {/* <Form.Input\n        fluid\n        required\n        value={form.password}\n        type=\"password\"\n        label=\"Password\"\n        placeholder=\"••••••••••\"\n        autoComplete=\"off\"\n        onChange={this._onChangeProp.bind(this, \"password\")}\n      /> */}\n      <h1 className=\"mt-3\">Assignment</h1>\n      <Container>\n        <Form className=\"mb-3\">\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              value={inputValues.title}\n              type=\"text\"\n              placeholder=\"Enter Title\"\n              onChange={handleOnChange}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Content</Form.Label>\n            <Form.Control\n              // onChange={(e: any) => {\n              //   onChange.bind(e, \"content\");\n              // }}\n              required\n              value={inputValues.content}\n              as=\"textarea\"\n              rows={3}\n            />\n          </Form.Group>\n          <Button variant=\"warning\">Submit Content</Button>{\" \"}\n        </Form>\n      </Container>\n      <Container>\n        <h1>Posts</h1>\n      </Container>\n      <Container>\n        <InfiniteScroll\n          dataLength={8}\n          next={fetchMoreData}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n        >\n          {/* {this.state.items.map((i, index) => (\n            <div style={style} key={index}>\n              div - #{index}\n            </div>\n          ))} */}\n          <Stack gap={4} className=\"col-md-4 mx-auto\">\n            <Card style={{ width: \"28rem\" }}>\n              <Card.Body>\n                <Card.Title>Card Title</Card.Title>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Stack>\n          {/* <Card style={{ width: \"18rem\" }}>\n            <Card.Body>\n              <Placeholder as={Card.Title} animation=\"glow\">\n                <Placeholder xs={6} />\n              </Placeholder>\n              <Placeholder as={Card.Text} animation=\"glow\">\n                <Placeholder xs={7} /> <Placeholder xs={4} />{\" \"}\n                <Placeholder xs={4} /> <Placeholder xs={6} />{\" \"}\n                <Placeholder xs={8} />\n              </Placeholder>\n              <Placeholder.Button variant=\"primary\" xs={6} />\n            </Card.Body>\n          </Card> */}\n        </InfiniteScroll>\n      </Container>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}