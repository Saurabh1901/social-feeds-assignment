{"ast":null,"code":"var _jsxFileName = \"/home/saurabh/Assignment/assignment/Client/src/components/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Button, Card, Container, Form, Stack } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { sortBy } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const handleOnChange = useCallback((event, prop) => {\n    if (prop === \"title\") {\n      setTitle(event.target.value);\n    }\n\n    if (prop === \"content\") {\n      setContent(event.target.value);\n    }\n  }, [title, content]);\n  const createdAt = moment().unix();\n  console.log(createdAt);\n\n  const onSubmit = () => {\n    axios.post(\"http://localhost:8080/create-feed\", {\n      title,\n      content,\n      createdAt\n    }).then(response => {\n      if (response && response.data && response.data.success) {\n        console.log(\"response: \", response);\n      }\n    }).catch(console.warn);\n  };\n\n  useEffect(() => {\n    const fetchFeeds = async () => {\n      await axios.get(\"http://localhost:8080/\").then(response => {\n        console.log(\"response1\", response);\n\n        if (response && response.data && response.data.success) {\n          // const sortPost  = response.data.payload.sort((a, b) => a.diff(b))\n          // const sortPost  = response.data.payload.sort((a, b) => a.valueOf() - b.valueOf())\n          const sortPost = sortBy(response.data.payload, 'createdAt');\n          setPosts(sortPost);\n          setIsLoading(false);\n        }\n      }).catch(console.error);\n    };\n\n    fetchFeeds();\n  }, []);\n  console.log(\"posts: \", posts);\n\n  const fetchMoreData = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-3\",\n      children: \"Assignment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlInput1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: title,\n            type: \"text\",\n            placeholder: \"Enter Title\",\n            onChange: e => handleOnChange(e, \"title\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlTextarea1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: e => handleOnChange(e, \"content\"),\n            required: true,\n            value: content,\n            as: \"textarea\",\n            rows: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onSubmit,\n          variant: \"warning\",\n          children: \"Submit Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: 8,\n        next: fetchMoreData,\n        hasMore: true,\n        loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          gap: 4,\n          className: \"col-md-4 mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: \"28rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Card Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"+sYXgxXAa4IWK2DW0DksAhQpG3w=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/saurabh/Assignment/assignment/Client/src/components/Home.tsx"],"names":["axios","moment","React","useCallback","useEffect","useState","Button","Card","Container","Form","Stack","InfiniteScroll","sortBy","Home","title","setTitle","content","setContent","posts","setPosts","isLoading","setIsLoading","handleOnChange","event","prop","target","value","createdAt","unix","console","log","onSubmit","post","then","response","data","success","catch","warn","fetchFeeds","get","sortPost","payload","error","fetchMoreData","e","width"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport moment from \"moment\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Container,\n  Form,\n  Placeholder,\n  Stack,\n} from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {orderBy, sortBy} from \"lodash\"\n\nconst Home: React.FC = () => {\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleOnChange = useCallback(\n    (event, prop) => {\n      if (prop === \"title\") {\n        setTitle(event.target.value);\n      }\n      if (prop === \"content\") {\n        setContent(event.target.value);\n      }\n    },\n    [title, content]\n  );\n  const createdAt = moment().unix();\n  console.log(createdAt);\n  const onSubmit = () => {\n    axios\n      .post(\"http://localhost:8080/create-feed\", {\n        title,\n        content,\n        createdAt\n      })\n      .then((response) => {\n        if (response && response.data && response.data.success) {\n          console.log(\"response: \", response);\n        }\n      })\n      .catch(console.warn);\n  };\n\n  useEffect(() => {\n    const fetchFeeds = async () => {\n      await axios\n        .get(\"http://localhost:8080/\")\n        .then((response) => {\n          console.log(\"response1\", response);\n          if (response && response.data && response.data.success) {\n            // const sortPost  = response.data.payload.sort((a, b) => a.diff(b))\n            // const sortPost  = response.data.payload.sort((a, b) => a.valueOf() - b.valueOf())\n            const sortPost = sortBy(response.data.payload, 'createdAt')\n            setPosts(sortPost);\n            setIsLoading(false);\n          }\n        })\n        .catch(console.error);\n    };\n    fetchFeeds();\n  }, []);\n  console.log(\"posts: \", posts);\n  const fetchMoreData = () => {};\n  return (\n    <div>\n      <h1 className=\"mt-3\">Assignment</h1>\n      <Container>\n        <Form className=\"mb-3\">\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              value={title}\n              type=\"text\"\n              placeholder=\"Enter Title\"\n              onChange={(e) => handleOnChange(e, \"title\")}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Content</Form.Label>\n            <Form.Control\n              onChange={(e) => handleOnChange(e, \"content\")}\n              required\n              value={content}\n              as=\"textarea\"\n              rows={3}\n            />\n          </Form.Group>\n          <Button onClick={onSubmit} variant=\"warning\">\n            Submit Content\n          </Button>{\" \"}\n        </Form>\n      </Container>\n      <Container>\n        <h1>Posts</h1>\n      </Container>\n      <Container>\n        <InfiniteScroll\n          dataLength={8}\n          next={fetchMoreData}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n        >\n          {/* {this.state.items.map((i, index) => (\n            <div style={style} key={index}>\n              div - #{index}\n            </div>\n          ))} */}\n          <Stack gap={4} className=\"col-md-4 mx-auto\">\n            {\n              <Card style={{ width: \"28rem\" }}>\n                <Card.Body>\n                  <Card.Title>Card Title</Card.Title>\n                  <Card.Text>\n                    Some quick example text to build on the card title and make\n                    up the bulk of the card's content.\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            }\n          </Stack>\n          {/* <Card style={{ width: \"18rem\" }}>\n            <Card.Body>\n              <Placeholder as={Card.Title} animation=\"glow\">\n                <Placeholder xs={6} />\n              </Placeholder>\n              <Placeholder as={Card.Text} animation=\"glow\">\n                <Placeholder xs={7} /> <Placeholder xs={4} />{\" \"}\n                <Placeholder xs={4} /> <Placeholder xs={6} />{\" \"}\n                <Placeholder xs={8} />\n              </Placeholder>\n              <Placeholder.Button variant=\"primary\" xs={6} />\n            </Card.Body>\n          </Card> */}\n        </InfiniteScroll>\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}