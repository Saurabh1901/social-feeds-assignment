{"ast":null,"code":"var _jsxFileName = \"/home/saurabh/Assignment/assignment/Client/src/components/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Button, Card, Container, Form, Spinner, Stack } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { orderBy } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [page, setPage] = useState(1);\n  const [posts, setPosts] = useState();\n  const [totalPosts, setTotalPosts] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const handleOnChange = useCallback((event, prop) => {\n    if (prop === \"title\") {\n      setTitle(event.target.value);\n    }\n\n    if (prop === \"content\") {\n      setContent(event.target.value);\n    }\n  }, [title, content]);\n  const createdAt = moment().unix();\n\n  const onSubmit = () => {\n    axios.post(\"http://localhost:8080/create-feed\", {\n      title,\n      content,\n      createdAt\n    }).then(response => {\n      if (response && response.data && response.data.success) {\n        setTitle(\"\");\n        setContent(\"\");\n        setTotalPosts(response.data.count);\n        setPosts([...(posts || []), response.data.payload]);\n        setIsLoading(false);\n      }\n    }).catch(console.warn);\n  };\n\n  useEffect(() => {\n    const fetchFeeds = async () => {\n      await axios.get(`http://localhost:8080/?page=${page}&limit=2`).then(response => {\n        console.log(\"response1\", response);\n\n        if (response && response.data && response.data.success) {\n          setPosts(response.data.payload);\n          setIsLoading(false);\n        }\n      }).catch(console.error);\n    };\n\n    fetchFeeds();\n  }, []);\n\n  const fetchMoreData = () => {\n    setPage(page + 1);\n\n    const fetchFeeds = async () => {\n      await axios.get(`http://localhost:8080/?page=${page}&limit=5`).then(response => {\n        console.log(\"response1\", response);\n\n        if (response && response.data && response.data.success) {\n          setPosts(posts === null || posts === void 0 ? void 0 : posts.concat(response.data.payload));\n          setIsLoading(false);\n        }\n      }).catch(console.error);\n    };\n\n    fetchFeeds();\n  };\n\n  const sortedPosts = orderBy(posts, [\"createdAt\"], [\"desc\"]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-3\",\n      children: \"Assignment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlInput1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: title,\n            type: \"text\",\n            placeholder: \"Enter Title\",\n            onChange: e => handleOnChange(e, \"title\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlTextarea1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: e => handleOnChange(e, \"content\"),\n            required: true,\n            value: content,\n            as: \"textarea\",\n            rows: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onSubmit,\n          variant: \"warning\",\n          children: \"Submit Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: (sortedPosts === null || sortedPosts === void 0 ? void 0 : sortedPosts.length) || 0,\n        next: fetchMoreData,\n        hasMore: (sortedPosts === null || sortedPosts === void 0 ? void 0 : sortedPosts.length) !== totalPosts,\n        loader: isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"grow\",\n          variant: \"warning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 32\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          gap: 4,\n          className: \"col-md-4 mx-auto mb-2\",\n          children: !isLoading && sortedPosts && sortedPosts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: \"28rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"z3B1CRG7SYp8jC4nT+rqapv/Z7U=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/saurabh/Assignment/assignment/Client/src/components/Home.tsx"],"names":["axios","moment","React","useCallback","useEffect","useState","Button","Card","Container","Form","Spinner","Stack","InfiniteScroll","orderBy","Home","title","setTitle","content","setContent","page","setPage","posts","setPosts","totalPosts","setTotalPosts","isLoading","setIsLoading","handleOnChange","event","prop","target","value","createdAt","unix","onSubmit","post","then","response","data","success","count","payload","catch","console","warn","fetchFeeds","get","log","error","fetchMoreData","concat","sortedPosts","e","length","map","width"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport moment from \"moment\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Button, Card, Container, Form, Spinner, Stack } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { orderBy } from \"lodash\";\n\nconst Home: React.FC = () => {\n  const [title, setTitle] = useState<string>();\n  const [content, setContent] = useState<string>();\n  const [page, setPage] = useState<number>(1);\n  const [posts, setPosts] = useState<any[]>();\n  const [totalPosts, setTotalPosts] = useState<number>(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleOnChange = useCallback(\n    (event, prop) => {\n      if (prop === \"title\") {\n        setTitle(event.target.value);\n      }\n      if (prop === \"content\") {\n        setContent(event.target.value);\n      }\n    },\n    [title, content]\n  );\n  const createdAt = moment().unix();\n  const onSubmit = () => {\n    axios\n      .post(\"http://localhost:8080/create-feed\", {\n        title,\n        content,\n        createdAt,\n      })\n      .then((response) => {\n        if (response && response.data && response.data.success) {\n          setTitle(\"\");\n          setContent(\"\");\n          setTotalPosts(response.data.count);\n          setPosts([...(posts || []), response.data.payload]);\n          setIsLoading(false);\n        }\n      })\n      .catch(console.warn);\n  };\n\n  useEffect(() => {\n    const fetchFeeds = async () => {\n      await axios\n        .get(`http://localhost:8080/?page=${page}&limit=2`)\n        .then((response) => {\n          console.log(\"response1\", response);\n          if (response && response.data && response.data.success) {\n            setPosts(response.data.payload);\n            setIsLoading(false);\n          }\n        })\n        .catch(console.error);\n    };\n    fetchFeeds();\n  }, []);\n\n  const fetchMoreData = () => {\n    setPage(page + 1);\n    const fetchFeeds = async () => {\n      await axios\n        .get(`http://localhost:8080/?page=${page}&limit=5`)\n        .then((response) => {\n          console.log(\"response1\", response);\n          if (response && response.data && response.data.success) {\n            setPosts(posts?.concat(response.data.payload));\n            setIsLoading(false);\n          }\n        })\n        .catch(console.error);\n    };\n    fetchFeeds();\n  };\n\n  const sortedPosts = orderBy(posts, [\"createdAt\"], [\"desc\"]);\n  return (\n    <div>\n      <h1 className=\"mt-3\">Assignment</h1>\n      <Container>\n        <Form className=\"mb-3\">\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              value={title}\n              type=\"text\"\n              placeholder=\"Enter Title\"\n              onChange={(e) => handleOnChange(e, \"title\")}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Content</Form.Label>\n            <Form.Control\n              onChange={(e) => handleOnChange(e, \"content\")}\n              required\n              value={content}\n              as=\"textarea\"\n              rows={3}\n            />\n          </Form.Group>\n          <Button onClick={onSubmit} variant=\"warning\">\n            Submit Content\n          </Button>{\" \"}\n        </Form>\n      </Container>\n      <Container>\n        <h1>Posts</h1>\n      </Container>\n      <Container>\n        <InfiniteScroll\n          dataLength={sortedPosts?.length || 0}\n          next={fetchMoreData}\n          hasMore={sortedPosts?.length !== totalPosts}\n          loader={isLoading && <Spinner animation=\"grow\" variant=\"warning\" />}\n        >\n          <Stack gap={4} className=\"col-md-4 mx-auto mb-2\">\n            {!isLoading &&\n              sortedPosts &&\n              sortedPosts.map((post) => (\n                <Card style={{ width: \"28rem\" }}>\n                  <Card.Body>\n                    <Card.Title>{post.title}</Card.Title>\n                    <Card.Text>{post.content}</Card.Text>\n                  </Card.Body>\n                </Card>\n              ))}\n          </Stack>\n        </InfiniteScroll>\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}